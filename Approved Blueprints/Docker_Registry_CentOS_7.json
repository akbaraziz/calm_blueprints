{"status":{},"contains_secrets":true,"product_version":"3.1.0","spec":{"description":"* [Registry](https:\/\/@@{Docker_Registry_Open_Source_service.address}@@:5000)","resources":{"client_attrs":{"17a64050-371e-493a-81eb-57b7740f18be":{"y":22,"x":98},"cd1c4772-aa4d-4248-971b-bc6ea9a6a217":{"y":22,"x":98},"fa4084ec_deployment":{"y":22,"x":98},"d264ee48-ef47-4de4-82a5-aad86454d0aa":{"y":22,"x":98},"9001f124-8e8d-4076-acd1-aa871cb71cda":{"y":22,"x":98}},"service_definition_list":[{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Docker_Registry_Open_Source"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"ConfigureRegistry"}],"name":"df3b184b_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Docker_Registry_Open_Source"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"ConfigureRegistry","attrs":{"exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nsudo mkdir -p certs auth\n\ndocker run --rm --entrypoint htpasswd registry:2 -Bbn \"@@{REGISTRY_USERNAME}@@\" \"@@{REGISTRY_PASSWORD}@@\" | sudo tee auth\/htpasswd\n\nif [[ \"@@{INSECURE_REGISTRY}@@\" == \"yes\" ]]; then\n\tsudo openssl req -newkey rsa:4096 -nodes -sha256 -keyout certs\/domain.key -x509 -days 365 -out certs\/domain.crt -subj \"\/C=@@{COUNTRY}@@\/ST=@@{STATE}@@\/L=@@{CITY}@@\/O=@@{ORGANIZATION}@@\/OU=@@{ORGANIZATIONAL_UNIT}@@\/CN=@@{CN}@@\"\n    \n\tsudo docker run -d -p 6000:6000  --restart=always --name DockerRegistry -v \/mnt\/registry:\/var\/lib\/registry -v `pwd`\/auth:\/auth -e \"REGISTRY_AUTH=htpasswd\" -e \"REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm\" -e REGISTRY_AUTH_HTPASSWD_PATH=\/auth\/htpasswd -v `pwd`\/certs:\/certs -e REGISTRY_HTTP_TLS_CERTIFICATE=\/certs\/domain.crt -e REGISTRY_HTTP_TLS_KEY=\/certs\/domain.key registry:2\nelse \n\tsudo docker run -d -p 6000:6000  --restart=always --name DockerRegistry -v \/mnt\/registry:\/var\/lib\/registry -v `pwd`\/auth:\/auth -e \"REGISTRY_AUTH=htpasswd\" -e \"REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm\" -e REGISTRY_AUTH_HTPASSWD_PATH=\/auth\/htpasswd registry:2\nfi\n","script_type":"sh","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"LinuxAdmin"}},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"e331c424_runbook","main_task_local_reference":{"kind":"app_task","name":"df3b184b_dag"},"variable_list":[]},"name":"action_create"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Docker_Registry_Open_Source"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"ceff4864_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"fbbfbcb6_runbook","main_task_local_reference":{"kind":"app_task","name":"ceff4864_dag"},"variable_list":[]},"name":"action_delete"},{"description":"System action for starting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Docker_Registry_Open_Source"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"989d32c7_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"0312e4d6_runbook","main_task_local_reference":{"kind":"app_task","name":"989d32c7_dag"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Docker_Registry_Open_Source"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"2d15c4a7_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"b35eb78b_runbook","main_task_local_reference":{"kind":"app_task","name":"2d15c4a7_dag"},"variable_list":[]},"name":"action_stop"},{"description":"System action for restarting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Docker_Registry_Open_Source"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"38deb172_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"b73a78c6_runbook","main_task_local_reference":{"kind":"app_task","name":"38deb172_dag"},"variable_list":[]},"name":"action_restart"},{"description":"System action for deleting an application. Does not delete created VMs","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Docker_Registry_Open_Source"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"41f8b696_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"12157aa0_runbook","main_task_local_reference":{"kind":"app_task","name":"41f8b696_dag"},"variable_list":[]},"name":"action_soft_delete"},{"description":"","type":"user","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Disk Setup"},{"kind":"app_task","name":"Docker Setup"}],"name":"03b6ade9_dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Disk Setup"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Docker Setup"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Docker_Registry_Open_Source"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Disk Setup","attrs":{"exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\n##############################################\n# Name        : Generic_disk_setup.sh\n# Author      : Calm Devops\n# Version     : 1.0\n# Description : Script is used to group all possible disk to single group and create one logical volume of that\n# Compatibility : Centos 6, 7\n##############################################\n\nsudo yum update -y --quiet\nsudo yum install -y --quiet lvm2 libudev-devel\npv_list=\"\"\t\t\t# This variable will store all the unused or unclaimed disks \nfor x in {a..z}; do\n   if [ -e \/dev\/sd$x ];\t\t# For all providers except AWS\n   then\n      data_flag=`sudo file -sL \/dev\/sd$x | cut -d ':' -f2 | tr -d ' '`\n      if [ \"$data_flag\" == \"data\" ]\n      then\n      sudo pvcreate \/dev\/sd$x\n      pv_list+=\"\/dev\/sd$x \"\n      fi\n   elif [ -e \/dev\/xvd$x ];\t#AWS disks\n   then\n      data_flag=`sudo file -sL \/dev\/xvd$x | cut -d ':' -f2 | tr -d ' '`\n      if [ \"$data_flag\" == \"data\" ]\n      then\n        sudo pvcreate \/dev\/xvd$x\n        pv_list+=\"\/dev\/xvd$x \"\n      fi\n   fi\ndone\n\nif [[ ! -z $pv_list ]]; then\n\teval sudo vgcreate vg01 $pv_list\t# vg01 is created with all unclaimed or unused disks\n    sudo lvcreate -l 100%VG -n lv01 vg01\t# lv01 is created from vg01\n\tsudo mkfs.xfs \/dev\/vg01\/lv01\n    sudo mkdir -p @@{MOUNT_PATH}@@\n\techo -e \"\/dev\/vg01\/lv01 \\t @@{MOUNT_PATH}@@ \\t xfs \\t defaults \\t 0 0\" | sudo tee -a \/etc\/fstab\t# lv01 is mounted to @@{MOUNT_PATH}@@\n\tsudo mount -a\nfi\n\n","script_type":"sh","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"LinuxAdmin"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Docker_Registry_Open_Source"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Docker Setup","attrs":{"exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\nsudo hostnamectl set-hostname --static @@{HOST_NAME}@@\n\n#Install NTP and OpenSSL\nsudo yum install -y --quiet ntp openssl \n\n#Remove any Old docker version\nsudo yum remove docker docker-common container-selinux docker-selinux docker-engine\n\n#Install Docker\nsudo yum install -y --quiet yum-utils\nsudo yum-config-manager --add-repo https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nsudo yum install -y --quiet docker-ce\n\nsudo sed -i '\/ExecStart=\/c\\\\ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:2375 -H unix:\/\/\/var\/run\/docker.sock' \/usr\/lib\/systemd\/system\/docker.service\nsudo systemctl enable docker\nsudo systemctl start docker\nsudo usermod -a -G docker $USER\n","script_type":"sh","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"LinuxAdmin"}},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"17c6f964_runbook","main_task_local_reference":{"kind":"app_task","name":"03b6ade9_dag"},"variable_list":[]},"name":"Common Setup"},{"description":"","type":"user","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Docker Uninstall"}],"name":"d244439a_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Docker_Registry_Open_Source"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Docker Uninstall","attrs":{"exit_status":[],"script":"#!\/bin\/bash\nset -ex\n\n##############################################\n# Name        : DockerUninstall.sh\n# Author      : Calm Devops\n# Version     : 1.0\n# Description : Script is used to uninstall Docker\n# Compatibility : Centos 6, 7\n##############################################\n\nsudo yum -y remove docker*","script_type":"sh","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"LinuxAdmin"}},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"31a08b61_runbook","main_task_local_reference":{"kind":"app_task","name":"d244439a_dag"},"variable_list":[]},"name":"Common Uninstallation"}],"depends_on_list":[],"name":"Docker_Registry_Open_Source","port_list":[],"tier":"","variable_list":[],"description":""}],"substrate_definition_list":[{"description":"","action_list":[],"type":"AHV_VM","name":"DockerRegistryAHV","readiness_probe":{"connection_type":"SSH","retries":"5","connection_protocol":"","connection_port":22,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"60","disable_readiness_probe":false,"login_credential_local_reference":{"kind":"app_credential","name":"LinuxAdmin"}},"editables":{"readiness_probe":{"retries":true,"delay_secs":true,"timeout_secs":true},"create_spec":{"resources":{"nic_list":{"0":{"subnet_reference":true}},"serial_port_list":{},"num_vcpus_per_socket":true,"num_sockets":true,"memory_size_mib":true,"boot_config":true,"guest_customization":true,"disk_list":{"1":{"disk_size_mib":true},"0":{"disk_size_mib":true},"3":{"disk_size_mib":true},"2":{"disk_size_mib":true}}},"name":true,"categories":true}},"os_type":"Linux","create_spec":{"name":"@@{HOST_NAME}@@","resources":{"nic_list":[{"nic_type":"NORMAL_NIC","ip_endpoint_list":[],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"dbbe3e44-291e-495c-9192-b70a6b163250"},"type":""}],"serial_port_list":[],"guest_tools":null,"num_vcpus_per_socket":1,"num_sockets":2,"gpu_list":[],"memory_size_mib":4096,"parent_reference":null,"hardware_clock_timezone":"","guest_customization":null,"power_state":"ON","type":"","account_uuid":"e98ba8d9-fb36-4f5c-aaff-3348bf2fd79a","boot_config":{"boot_device":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"}},"type":"","boot_type":"UEFI","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"image","type":"","name":"CentOS 7 Template","uuid":"f60bc46a-b31e-4455-a8ed-b54cfd5a5179"},"type":"","disk_size_mib":1,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"},"device_type":"DISK"}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":1,"adapter_type":"SCSI"},"device_type":"DISK"}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":2,"adapter_type":"SCSI"},"device_type":"DISK"}},{"data_source_reference":null,"type":"","disk_size_mib":10240,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":3,"adapter_type":"SCSI"},"device_type":"DISK"}},{"data_source_reference":null,"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"IDE"},"device_type":"CDROM"}}]},"availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":null,"categories":{"AppFamily":"Containers","OSType":"Linux","Linux_Version":"CentOS_7","OS_Vendor":"CentOS","AppType":"Docker"}},"variable_list":[]}],"credential_definition_list":[{"username":"root","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":true,"secret_reference":{}},"value":"iNyZiRtwB7UJAYab8mB+TpK5bdOqFTYE97MCE5V9AJtNzG+LAhiYExo=:utf-8"},"name":"LinuxAdmin","editables":{"username":true,"secret":true}},{"username":"admin","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":true,"secret_reference":{}},"value":"Q4JF8X2jITAwAJSSmwj752uh51Yu2BOYIdrDbR\/WFpOHmcqRGPQgWQ8XgDgY:utf-8"},"name":"PcAdmin"}],"package_definition_list":[{"description":"","action_list":[],"type":"DEB","service_local_reference_list":[{"kind":"app_service","name":"Docker_Registry_Open_Source"}],"name":"DockerRegistryAHVPackage","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"DockerRegistryAHVPackage"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Common Setup"},{"kind":"app_task","name":"Mount NGT"},{"kind":"app_task","name":"Restart NGT Service"}],"name":"ec815fbe_dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Common Setup"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Mount NGT"}},{"from_task_reference":{"kind":"app_task","name":"Mount NGT"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Restart NGT Service"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Docker_Registry_Open_Source"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Common Setup","attrs":{"type":"CALL_RUNBOOK","inarg_list":[],"runbook_reference":{"kind":"app_runbook","name":"17c6f964_runbook"}},"timeout_secs":"0","type":"CALL_RUNBOOK","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Docker_Registry_Open_Source"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Mount NGT","attrs":{"script":"# region headers\n# escript-template v20190523 \/ stephane.bourdeaud@nutanix.com\n# * author:       salaheddine.gassim@nutanix.com, stephane.bourdeaud@nutanix.com\n# * version:      2019\/06\/04\n# task_name:      EnableNgt\n# description:    This script enables the Nutanix Guest Tools on the AHV\n#                 virtual machine provisioned by Calm. NGT should already be\n#                 installed inside the VM template.  You will need to restart\n#                 the NGT service in guest using \"systemctl status\n#                 ngt_guest_agent.service\" for a Linux VM.\n# endregion\n\n# region capture Calm macros\npc_user = \"@@{PcAdmin.username}@@\"\npc_password = \"@@{PcAdmin.secret}@@\"\nvm_uuid = \"@@{platform.metadata.uuid}@@\"\ncluster_uuid = \"@@{platform.status.cluster_reference.uuid}@@\"\npc_ip = \"@@{pc_ip}@@\"\n# endregion\n\n# region prepare variables\nvm_uuid_url = \"https:\/\/\" + pc_ip + \":9440\/api\/nutanix\/v3\/vms\/\" + vm_uuid\ncluster_uuid_url = \"https:\/\/\" + pc_ip + \":9440\/api\/nutanix\/v3\/clusters\/\" + cluster_uuid\nheaders = {\n    'Accept': 'application\/json', \n    'Content-Type': 'application\/json; charset=UTF-8'\n}\n# endregion\n\n# region functions\ndef process_request(url, method, user, password, headers, payload=None):\n   if (payload != None):\n       payload = json.dumps(payload)\n   r = urlreq(\n       url, \n       verb=method, \n       auth=\"BASIC\", \n       user=user, \n       passwd=password, \n       params=payload, \n       verify=False, \n       headers=headers\n    )\n   return r\n# endregion\n\nprint \"Enabling NGT...\"\n\n# region get the AHV cluster IP address\nmethod = 'GET'\nurl = cluster_uuid_url\nprint(\"Making a {} API call to {}\".format(method, url))\nresp = process_request(url, method, pc_user, pc_password, headers)\nresult = json.loads(resp.content)\n\nif resp.ok:\n    # print the content of the response\n    print(json.dumps(\n        json.loads(resp.content),\n        indent=4\n    ))\n    cluster_ip = result[\"status\"][\"resources\"][\"network\"][\"external_ip\"]\n    print(\"The AHV cluster IP address is {}\".format(cluster_ip))\nelse:\n    # print the content of the response (which should have the error message)\n    print(\"Request failed\", json.dumps(\n        json.loads(resp.content),\n        indent=4\n    ))\n    print(\"Headers: {}\".format(headers))\n    print(\"Payload: {}\".format(payload))\n    exit(1)\n# endregion\n\n# region mount the NGT image (to regenerate the certificates)\nmethod = 'POST'\nurl = \"https:\/\/\"+ cluster_ip + \":9440\/PrismGateway\/services\/rest\/v1\/vms\/\" + vm_uuid + \"\/guest_tools\/mount\"\nprint(\"Making a {} API call to {}\".format(method, url))\nresp = process_request(url, method, pc_user, pc_password,headers)\nif resp.content:\n    result = json.loads(resp.content)\nelse:\n    print(\"Request did not return any content.\")\n\nif resp.ok:\n    print('Status code: {}'.format(resp.status_code))\n    # print the content of the response\n    if resp.content:\n        print(json.dumps(\n            json.loads(resp.content),\n            indent=4\n        ))\n        print \"NGT mounted\"\nelse:\n    print('Status code: {}'.format(resp.status_code))\n    # print the content of the response (which should have the error message)\n    if resp.content:\n        print(\"Request failed\", json.dumps(\n            json.loads(resp.content),\n            indent=4\n        ))\n    print(\"Headers: {}\".format(headers))\n    print(\"Payload: {}\".format(payload))\n    exit(1)\n# endregion\n\n# region enable guest tools for the VM\nmethod = 'POST'\nurl = \"https:\/\/\"+ cluster_ip + \":9440\/PrismGateway\/services\/rest\/v1\/vms\/\" + cluster_uuid + \"::\" + vm_uuid + \"\/guest_tools\/\"\nprint(\"Making a {} API call to {}\".format(method, url))\npayload = {\n    \"vmUuid\": cluster_uuid + \"::\" + vm_uuid,\n    \"enabled\": \"true\",\n    \"applications\": {\n        \"file_level_restore\": \"false\",\n        \"vss_snapshot\": \"true\"\n    }\n}\nresp = process_request(url, method, pc_user, pc_password,headers, payload)\nif resp.content:\n    result = json.loads(resp.content)\n\nif resp.ok:\n    print('Status code: {}'.format(resp.status_code))\n    # print the content of the response\n    if resp.content:\n        print(json.dumps(\n            json.loads(resp.content),\n            indent=4\n        ))\n        print \"NGT enabled\"\n    exit(0)\nelse:\n    print('Status code: {}'.format(resp.status_code))\n    # print the content of the response (which should have the error message)\n    if resp.content:\n        print(\"Request failed\", json.dumps(\n            json.loads(resp.content),\n            indent=4\n        ))\n    print(\"Headers: {}\".format(headers))\n    print(\"Payload: {}\".format(payload))\n    exit(1)\n# endregion","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Docker_Registry_Open_Source"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Restart NGT Service","attrs":{"exit_status":[],"script":"#!\/bin\/bash\n\nset -ex\n\nsystemctl restart ngt_guest_agent","script_type":"sh","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"LinuxAdmin"}},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"7bb3fecb_runbook","main_task_local_reference":{"kind":"app_task","name":"ec815fbe_dag"},"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"DockerRegistryAHVPackage"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Common Uninstallation"}],"name":"336c9cc6_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Docker_Registry_Open_Source"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Common Uninstallation","attrs":{"type":"CALL_RUNBOOK","inarg_list":[],"runbook_reference":{"kind":"app_runbook","name":"31a08b61_runbook"}},"timeout_secs":"0","type":"CALL_RUNBOOK","variable_list":[]}],"description":"","name":"a70d96b9_runbook","main_task_local_reference":{"kind":"app_task","name":"336c9cc6_dag"},"variable_list":[]}},"variable_list":[]}],"app_profile_list":[{"deployment_create_list":[{"type":"GREENFIELD","action_list":[],"name":"fa4084ec_deployment","min_replicas":"1","default_replicas":"1","depends_on_list":[],"published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"DockerRegistryAHVPackage"}],"substrate_local_reference":{"kind":"app_substrate","name":"DockerRegistryAHV"},"variable_list":[],"description":""}],"description":"","action_list":[],"name":"Nutanix","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"INSECURE_REGISTRY","value":"yes","label":"","attrs":{"type":"LOCAL"},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":["yes","no"]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"REGISTRY_USERNAME","value":"admin","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"SECRET","name":"REGISTRY_PASSWORD","value":"C8qE+9U4dOsR\/XdIVRMSKZJULruXBbDsIgPvHvAT\/EIckHmTY1Bs7\/U=:utf-8","label":"","attrs":{"is_secret_modified":false,"secret_reference":{},"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"CN","value":"registry.lab.local","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"COUNTRY","value":"US","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"STATE","value":"Texas","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"CITY","value":"Houston","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"ORGANIZATION","value":"Nutanix","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"ORGANIZATIONAL_UNIT","value":"Services","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"MOUNT_PATH","value":"\/mnt\/registry","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":true,"description":"Enter VM host name","data_type":"BASE","type":"LOCAL","name":"HOST_NAME","value":"","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":true,"description":"Enter Prism Central IP Address","data_type":"BASE","type":"LOCAL","name":"pc_ip","value":"10.10.10.35","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}}]}],"published_service_definition_list":[],"default_credential_local_reference":{"kind":"app_credential","name":"LinuxAdmin"},"type":"USER"},"name":"Docker Registry"},"api_version":"3.0","metadata":{"last_update_time":"1607209511524367","kind":"blueprint","spec_version":20,"creation_time":"1607205683700911","categories":{"AppFamily":"Containers"},"name":"Docker Registry"}}