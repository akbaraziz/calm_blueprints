{"status":{},"contains_secrets":true,"product_version":"3.1.0","spec":{"description":"**Windows Server 2019 Datacenter Blueprint**\n","resources":{"client_attrs":{},"service_definition_list":[{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Service1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"9547e13e_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"41e5c500_runbook","main_task_local_reference":{"kind":"app_task","name":"9547e13e_dag"},"variable_list":[]},"name":"action_create"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Service1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"8d7c7451_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"9b2eb49d_runbook","main_task_local_reference":{"kind":"app_task","name":"8d7c7451_dag"},"variable_list":[]},"name":"action_delete"},{"description":"System action for starting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Service1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"a97b73d4_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"71b3c833_runbook","main_task_local_reference":{"kind":"app_task","name":"a97b73d4_dag"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Service1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"2f268aad_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"8f051cd3_runbook","main_task_local_reference":{"kind":"app_task","name":"2f268aad_dag"},"variable_list":[]},"name":"action_stop"},{"description":"System action for restarting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Service1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"1f51e489_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"410bca50_runbook","main_task_local_reference":{"kind":"app_task","name":"1f51e489_dag"},"variable_list":[]},"name":"action_restart"}],"depends_on_list":[],"name":"Service1","port_list":[],"tier":"","variable_list":[],"description":""}],"substrate_definition_list":[{"description":"","action_list":[],"type":"AHV_VM","name":"VM1","readiness_probe":{"connection_type":"POWERSHELL","retries":"5","connection_protocol":"http","connection_port":5985,"address":"@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@","delay_secs":"120","disable_readiness_probe":false,"login_credential_local_reference":{"kind":"app_credential","name":"WindowsAdmin"}},"editables":{"create_spec":{"resources":{"nic_list":{"0":{"subnet_reference":true}},"serial_port_list":{}}}},"os_type":"Windows","create_spec":{"name":"@@{HOST_NAME}@@","resources":{"nic_list":[{"nic_type":"NORMAL_NIC","ip_endpoint_list":[],"network_function_chain_reference":null,"network_function_nic_type":"INGRESS","mac_address":"","subnet_reference":{"kind":"subnet","type":"","name":"","uuid":"dbbe3e44-291e-495c-9192-b70a6b163250"},"type":""}],"serial_port_list":[],"guest_tools":null,"num_vcpus_per_socket":1,"num_sockets":2,"gpu_list":[],"memory_size_mib":4096,"parent_reference":null,"hardware_clock_timezone":"","guest_customization":{"cloud_init":null,"type":"","sysprep":{"is_domain":false,"install_type":"PREPARED","domain_credential_reference":null,"domain":"","dns_ip":"","dns_search_path":"","unattend_xml":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<unattend xmlns=\"urn:schemas-microsoft-com:unattend\">\n   <settings pass=\"oobeSystem\">\n      <component name=\"Microsoft-Windows-Shell-Setup\" xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n         <OOBE>\n            <HideEULAPage>true<\/HideEULAPage>\n            <HideOEMRegistrationScreen>true<\/HideOEMRegistrationScreen>\n            <HideOnlineAccountScreens>true<\/HideOnlineAccountScreens>\n            <HideWirelessSetupInOOBE>true<\/HideWirelessSetupInOOBE>\n            <NetworkLocation>Work<\/NetworkLocation>\n            <SkipMachineOOBE>true<\/SkipMachineOOBE>\n         <\/OOBE>\n         <UserAccounts>\n            <AdministratorPassword>\n               <Value>@@{WindowsAdmin.secret}@@<\/Value>\n               <PlainText>true<\/PlainText>\n            <\/AdministratorPassword>\n         <\/UserAccounts>\n         <FirstLogonCommands>\n            <SynchronousCommand wcm:action=\"add\">\n               <CommandLine>cmd.exe \/c netsh firewall add portopening TCP 5985 \"Port 5985\"<\/CommandLine>\n               <Description>Win RM port open<\/Description>\n               <Order>1<\/Order>\n               <RequiresUserInput>true<\/RequiresUserInput>\n            <\/SynchronousCommand>\n            <SynchronousCommand wcm:action=\"add\">\n               <CommandLine>powershell -Command \"Enable-PSRemoting -SkipNetworkProfileCheck -Force\"<\/CommandLine>\n               <Description>Enable PS-Remoting<\/Description>\n               <Order>2<\/Order>\n               <RequiresUserInput>true<\/RequiresUserInput>\n            <\/SynchronousCommand>\n            <SynchronousCommand wcm:action=\"add\">\n               <CommandLine>powershell -Command \"Set-ExecutionPolicy -ExecutionPolicy RemoteSigned\"<\/CommandLine>\n               <Description>Enable Remote-Signing<\/Description>\n               <Order>3<\/Order>\n               <RequiresUserInput>false<\/RequiresUserInput>\n            <\/SynchronousCommand>\n         <\/FirstLogonCommands>   \n      <\/component>\n      <component name=\"Microsoft-Windows-International-Core\" xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n         <InputLocale>en-US<\/InputLocale>\n         <SystemLocale>en-US<\/SystemLocale>\n         <UILanguageFallback>en-us<\/UILanguageFallback>\n         <UILanguage>en-US<\/UILanguage>\n         <UserLocale>en-US<\/UserLocale>\n      <\/component>\n   <\/settings>\n   <settings pass=\"specialize\">\n      <component name=\"Microsoft-Windows-Shell-Setup\" xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n         <ComputerName>@@{HOST_NAME}@@<\/ComputerName>\n         <RegisteredOrganization>Nutanix<\/RegisteredOrganization>\n         <RegisteredOwner>Acropolis<\/RegisteredOwner>\n         <TimeZone>Central Standard Time<\/TimeZone>\n      <\/component>\n      <component name=\"Microsoft-Windows-TerminalServices-LocalSessionManager\" xmlns=\"\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\" processorArchitecture=\"amd64\">\n         <fDenyTSConnections>false<\/fDenyTSConnections>\n      <\/component>\n      <component name=\"Microsoft-Windows-TerminalServices-RDP-WinStationExtensions\" xmlns=\"\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\" processorArchitecture=\"amd64\">\n         <UserAuthentication>0<\/UserAuthentication>\n      <\/component>\n      <component name=\"Networking-MPSSVC-Svc\" xmlns:wcm=\"http:\/\/schemas.microsoft.com\/WMIConfig\/2002\/State\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" processorArchitecture=\"amd64\" publicKeyToken=\"31bf3856ad364e35\" language=\"neutral\" versionScope=\"nonSxS\">\n         <FirewallGroups>\n            <FirewallGroup wcm:action=\"add\" wcm:keyValue=\"RemoteDesktop\">\n               <Active>true<\/Active>\n               <Profile>all<\/Profile>\n               <Group>@FirewallAPI.dll,-28752<\/Group>\n            <\/FirewallGroup>\n         <\/FirewallGroups>\n      <\/component>\n   <\/settings>\n<\/unattend>\n","type":""}},"power_state":"ON","type":"","account_uuid":"e98ba8d9-fb36-4f5c-aaff-3348bf2fd79a","boot_config":{"boot_device":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"}},"type":"","boot_type":"UEFI","mac_address":""},"disk_list":[{"data_source_reference":{"kind":"image","type":"","name":"Windows Server 2019 Template","uuid":"155d3710-671b-454a-bf02-8c3b358a47c5"},"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"SCSI"},"device_type":"DISK"}},{"data_source_reference":null,"type":"","disk_size_mib":0,"volume_group_reference":null,"device_properties":{"type":"","disk_address":{"type":"","device_index":0,"adapter_type":"IDE"},"device_type":"CDROM"}}]},"availability_zone_reference":null,"backup_policy":null,"type":"","cluster_reference":null,"categories":{"OSType":"Windows","Windows_Version":"2019","OS_Vendor":"Microsoft"}},"variable_list":[]}],"credential_definition_list":[{"username":"administrator","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":true,"secret_reference":{}},"value":"yonH9I60mkFvIth0qzLIg6PGchXJAUm0iwfBxetJnXDE+CqaFJzofXk=:utf-8"},"name":"WindowsAdmin"},{"username":"administrator","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":true,"secret_reference":{}},"value":"UvKEAmZSUdDHWOBkUI787Xqd0khXoTEP4S95odWX6LJtN8zMLCRwnEk=:utf-8"},"name":"DomainAdmin"},{"username":"admin","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":true,"secret_reference":{}},"value":"1TgYMIsdc2m77QIl5747Rus2I7bYqGapCkhgTEqCajriZu+HFo0Jq\/gf9u5d:utf-8"},"name":"PcAdmin"}],"package_definition_list":[{"description":"","action_list":[],"type":"DEB","service_local_reference_list":[{"kind":"app_service","name":"Service1"}],"name":"Package1","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package1"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Activate Windows"},{"kind":"app_task","name":"Rename Host"},{"kind":"app_task","name":"Enable NGT"},{"kind":"app_task","name":"Reboot Host"},{"kind":"app_task","name":"Wait for Reboot"},{"kind":"app_task","name":"Eject CDRom"}],"name":"f58f5f8d_dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"Activate Windows"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Enable NGT"}},{"from_task_reference":{"kind":"app_task","name":"Enable NGT"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Reboot Host"}},{"from_task_reference":{"kind":"app_task","name":"Reboot Host"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"Wait for Reboot"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Service1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Activate Windows","attrs":{"exit_status":[],"script":"$computer = gc env:computername\n\n$key = \"@@{ACTIVATION_KEY}@@\"\n\n$service = get-wmiObject -query \"select * from SoftwareLicensingService\" -computername $computer\n\n$service.InstallProductKey($key)\n\n$service.RefreshLicenseStatus()","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"WindowsAdmin"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Service1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Rename Host","attrs":{"exit_status":[],"script":"Rename-Computer -NewName @@{HOST_NAME}@@","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"WindowsAdmin"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Service1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Enable NGT","attrs":{"script":"# region headers\n# escript-template v20190523 \/ stephane.bourdeaud@nutanix.com\n# * author:       salaheddine.gassim@nutanix.com, stephane.bourdeaud@nutanix.com\n# * version:      2019\/06\/04\n# task_name:      EnableNgt\n# description:    This script enables the Nutanix Guest Tools on the AHV\n#                 virtual machine provisioned by Calm. NGT should already be\n#                 installed inside the VM template.  You will need to restart\n#                 the NGT service in guest using \"systemctl status\n#                 ngt_guest_agent.service\" for a Linux VM.\n# endregion\n\n# region capture Calm macros\npc_user = \"@@{PcAdmin.username}@@\"\npc_password = \"@@{PcAdmin.secret}@@\"\nvm_uuid = \"@@{platform.metadata.uuid}@@\"\ncluster_uuid = \"@@{platform.status.cluster_reference.uuid}@@\"\npc_ip = \"@@{pc_ip}@@\"\n# endregion\n\n# region prepare variables\nvm_uuid_url = \"https:\/\/\" + pc_ip + \":9440\/api\/nutanix\/v3\/vms\/\" + vm_uuid\ncluster_uuid_url = \"https:\/\/\" + pc_ip + \":9440\/api\/nutanix\/v3\/clusters\/\" + cluster_uuid\nheaders = {\n    'Accept': 'application\/json', \n    'Content-Type': 'application\/json; charset=UTF-8'\n}\n# endregion\n\n# region functions\ndef process_request(url, method, user, password, headers, payload=None):\n   if (payload != None):\n       payload = json.dumps(payload)\n   r = urlreq(\n       url, \n       verb=method, \n       auth=\"BASIC\", \n       user=user, \n       passwd=password, \n       params=payload, \n       verify=False, \n       headers=headers\n    )\n   return r\n# endregion\n\nprint \"Enabling NGT...\"\n\n# region get the AHV cluster IP address\nmethod = 'GET'\nurl = cluster_uuid_url\nprint(\"Making a {} API call to {}\".format(method, url))\nresp = process_request(url, method, pc_user, pc_password, headers)\nresult = json.loads(resp.content)\n\nif resp.ok:\n    # print the content of the response\n    print(json.dumps(\n        json.loads(resp.content),\n        indent=4\n    ))\n    cluster_ip = result[\"status\"][\"resources\"][\"network\"][\"external_ip\"]\n    print(\"The AHV cluster IP address is {}\".format(cluster_ip))\nelse:\n    # print the content of the response (which should have the error message)\n    print(\"Request failed\", json.dumps(\n        json.loads(resp.content),\n        indent=4\n    ))\n    print(\"Headers: {}\".format(headers))\n    print(\"Payload: {}\".format(payload))\n    exit(1)\n# endregion\n\n# region mount the NGT image (to regenerate the certificates)\nmethod = 'POST'\nurl = \"https:\/\/\"+ cluster_ip + \":9440\/PrismGateway\/services\/rest\/v1\/vms\/\" + vm_uuid + \"\/guest_tools\/mount\"\nprint(\"Making a {} API call to {}\".format(method, url))\nresp = process_request(url, method, pc_user, pc_password,headers)\nif resp.content:\n    result = json.loads(resp.content)\nelse:\n    print(\"Request did not return any content.\")\n\nif resp.ok:\n    print('Status code: {}'.format(resp.status_code))\n    # print the content of the response\n    if resp.content:\n        print(json.dumps(\n            json.loads(resp.content),\n            indent=4\n        ))\n        print \"NGT mounted\"\nelse:\n    print('Status code: {}'.format(resp.status_code))\n    # print the content of the response (which should have the error message)\n    if resp.content:\n        print(\"Request failed\", json.dumps(\n            json.loads(resp.content),\n            indent=4\n        ))\n    print(\"Headers: {}\".format(headers))\n    print(\"Payload: {}\".format(payload))\n    exit(1)\n# endregion\n\n# region enable guest tools for the VM\nmethod = 'POST'\nurl = \"https:\/\/\"+ cluster_ip + \":9440\/PrismGateway\/services\/rest\/v1\/vms\/\" + cluster_uuid + \"::\" + vm_uuid + \"\/guest_tools\/\"\nprint(\"Making a {} API call to {}\".format(method, url))\npayload = {\n    \"vmUuid\": cluster_uuid + \"::\" + vm_uuid,\n    \"enabled\": \"true\",\n    \"applications\": {\n        \"file_level_restore\": \"false\",\n        \"vss_snapshot\": \"true\"\n    }\n}\nresp = process_request(url, method, pc_user, pc_password,headers, payload)\nif resp.content:\n    result = json.loads(resp.content)\n\nif resp.ok:\n    print('Status code: {}'.format(resp.status_code))\n    # print the content of the response\n    if resp.content:\n        print(json.dumps(\n            json.loads(resp.content),\n            indent=4\n        ))\n        print \"NGT enabled\"\n    exit(0)\nelse:\n    print('Status code: {}'.format(resp.status_code))\n    # print the content of the response (which should have the error message)\n    if resp.content:\n        print(\"Request failed\", json.dumps(\n            json.loads(resp.content),\n            indent=4\n        ))\n    print(\"Headers: {}\".format(headers))\n    print(\"Payload: {}\".format(payload))\n    exit(1)\n# endregion","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Service1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Reboot Host","attrs":{"exit_status":[],"script":"Restart-Computer -Force","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"WindowsAdmin"}},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Service1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Wait for Reboot","attrs":{"type":"","interval_secs":30},"timeout_secs":"0","type":"DELAY","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Service1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Eject CDRom","attrs":{"exit_status":[],"script":"$sh = New-Object -ComObject \"Shell.Application\"\r\n$sh.Namespace(17).Items() | \r\n    Where-Object { $_.Type -eq \"CD Drive\" } | \r\n        foreach { $_.InvokeVerb(\"Eject\") }","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"WindowsAdmin"}},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"b0eae8cc_runbook","main_task_local_reference":{"kind":"app_task","name":"f58f5f8d_dag"},"variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"SECRET","name":"ACTIVATION_KEY","value":"yDb\/SF+gqbxxzJihlbdhbESpKJaqN1KvfkqAAfcDgFoouHm\/xmMktMdAnGGfEN1xDbbrKkanD4MNGEmDsA==:utf-8","label":"","attrs":{"is_secret_modified":false,"secret_reference":{},"type":"SECRET"},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"pc_ip","value":"10.10.10.35","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}}]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Package1"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Unregister Windows Key"}],"name":"ce2bb962_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Service1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Unregister Windows Key","attrs":{"exit_status":[],"script":"slmgr \/upk\n\nslmgr \/cpky","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"WindowsAdmin"}},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"4fa3147a_runbook","main_task_local_reference":{"kind":"app_task","name":"ce2bb962_dag"},"variable_list":[]}},"variable_list":[]}],"app_profile_list":[{"deployment_create_list":[{"type":"GREENFIELD","action_list":[],"name":"128ed475_deployment","min_replicas":"1","default_replicas":"1","depends_on_list":[],"published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"Package1"}],"substrate_local_reference":{"kind":"app_substrate","name":"VM1"},"variable_list":[],"description":""}],"description":"","action_list":[{"description":"","type":"user","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Service1"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"Join Active Directory"}],"name":"a4f581ff_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Service1"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"Join Active Directory","attrs":{"exit_status":[],"script":"# region headers\n# posh-api-template v20190604 \/ stephane.bourdeaud@nutanix.com\n#* author:       stephane.bourdeaud@nutanix.com\n#* version:      11\/14\/2019\n#  task_name:    JoinDomain\n#  description:  Joins the specified Active Directory domain\n# endregion\n\n#region capture Calm variables\n$ad_username = \"@@{DomainAdmin}@@\"\n$ad_username_secret = \"@@{DomainAdmin_Password}@@\"\n$ad_domain = \"@@{Domain_Name}@@\"\n#endregion\n\n#converting password to something we can use\n$adminpassword = ConvertTo-SecureString -asPlainText -Force -String \"$ad_username_secret\"\n#creating the credentials object based on the Calm variables\n$credential = New-Object System.Management.Automation.PSCredential($ad_username,$adminpassword)\n\n#joing the domain\ntry {\n    $result = add-computer -domainname $ad_domain -Credential ($credential) -Force -Options JoinWithNewName,AccountCreate -PassThru -ErrorAction Stop -Verbose\n    Write-Host \"INFO: Successfully joined Active Directory domain $ad_domain\"\n}\ncatch {Throw \"ERROR: Could not join Active Directory domain : $($_.Exception.Message)\"}\n\nRestart-Computer -Force -AsJob\nexit 0\n","script_type":"npsscript","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"WindowsAdmin"}},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"3b6b6ae4_runbook","main_task_local_reference":{"kind":"app_task","name":"a4f581ff_dag"},"variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"Domain_Name","value":"Enter Domain Name","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"DomainAdmin","value":"Enter Domain Admin Account Name","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"SECRET","name":"DomainAdmin_Password","value":"10FDdLVHPJOucYa3B10GT5fD+sl7rsW35\/iWetfiBtO11SazZtXtKUw=:utf-8","label":"","attrs":{"is_secret_modified":false,"secret_reference":{},"type":"SECRET"},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}}]},"name":"Join Active Directory Domain"}],"name":"Default","variable_list":[{"regex":{"should_validate":false,"value":"\\w{5,255}"},"val_type":"STRING","is_mandatory":true,"description":"Enter VM Host Name","data_type":"BASE","type":"LOCAL","name":"HOST_NAME","value":"","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}}]}],"published_service_definition_list":[],"default_credential_local_reference":{"kind":"app_credential","name":"WindowsAdmin"},"type":"USER"},"name":"Windows 2019 Datacenter"},"api_version":"3.0","metadata":{"last_update_time":"1607150602430123","kind":"blueprint","spec_version":39,"creation_time":"1606280418595206","categories":{"TemplateType":"Vm"},"name":"Windows 2019 Datacenter"}}